import{Q as $,M as j}from"./index.43a52b85.js";var ft=class{constructor(t,e){this.facenames=t,this.prefixFree=!0,this.gripnames=[],e&&(this.gripnames=e);for(let s=0;this.prefixFree&&s<t.length;s++)for(let i=0;this.prefixFree&&i<t.length;i++)s!==i&&t[s].startsWith(t[i])&&(this.prefixFree=!1)}setGripNames(t){this.gripnames=t}splitByFaceNames(t){const e=[];let s=0;for(;s<t.length;){s>0&&s<t.length&&t[s]==="_"&&s++;let i=-1;for(let n=0;n<this.facenames.length;n++)t.substr(s).startsWith(this.facenames[n])&&(i<0||this.facenames[n].length>this.facenames[i].length)&&(i=n);if(i>=0)e.push(i),s+=this.facenames[i].length;else throw new Error(`Could not split ${t} into face names.`)}return e}joinByFaceIndices(t){let e="";const s=[];for(let i=0;i<t.length;i++)s.push(e),s.push(this.facenames[t[i]]),this.prefixFree||(e="_");return s.join("")}spinmatch(t,e){if(t===e)return!0;try{const s=this.splitByFaceNames(t),i=this.splitByFaceNames(e);if(s.length!==i.length&&s.length<3)return!1;for(let n=0;n<s.length;n++){for(let r=0;r<n;r++)if(s[n]===s[r])return!1;let o=!1;for(let r=0;r<i.length;r++)if(s[n]===i[r]){o=!0;break}if(!o)return!1}return!0}catch{return!1}}spinmatchv(t,e){return t.endsWith("v")&&e.endsWith("v")?this.spinmatch(t.slice(0,t.length-1),e.slice(0,e.length-1)):this.spinmatch(t,e)}unswizzle(t){(t.endsWith("v")||t.endsWith("w"))&&t[0]<="Z"&&(t=t.slice(0,t.length-1));const e=t.toUpperCase();for(let s=0;s<this.gripnames.length;s++){const i=this.gripnames[s];if(this.spinmatch(e,i))return i}return t}},$t=class{notationToInternal(t){return t}notationToExternal(t){return t}},Qt=class{constructor(t,e){this.child=t,this.sw=e}notationToInternal(t){return t.family==="T"&&t.innerLayer===void 0&&t.outerLayer===void 0?new j(new $("FLRv",t.innerLayer,t.outerLayer),t.amount):this.child.notationToInternal(t)}notationToExternal(t){let e=t.family;return e.length>0&&e[e.length-1]==="v"&&(e=e.substring(0,e.length-1)),this.sw.spinmatch(e,"FLUR")?new j(new $("T",t.innerLayer,t.outerLayer),t.amount):this.child.notationToExternal(t)}},Rt=class{constructor(t,e){this.internalNames=t,this.externalNames=e}convertString(t,e,s){let i="";(t.endsWith("v")||t.endsWith("v"))&&t<="_"&&(i=t.slice(t.length-1),t=t.slice(0,t.length-1));const n=t.toUpperCase();let o=!1;return t!==n&&(o=!0,t=n),t=s.joinByFaceIndices(e.splitByFaceNames(t)),o&&(t=t.toLowerCase()),t+i}convert(t,e,s){const i=t.family,n=this.convertString(i,e,s);return i===n?t:new j(new $(n,t.innerLayer,t.outerLayer),t.amount)}notationToInternal(t){return this.convert(t,this.externalNames,this.internalNames)}notationToExternal(t){return this.convert(t,this.internalNames,this.externalNames)}},_t=class{constructor(t){this.child=t}notationToInternal(t){if(t.innerLayer===void 0&&t.outerLayer===void 0){if(Math.abs(t.amount)===1){if(t.family==="R++")return new j(new $("L",3,2),-2*t.amount);if(t.family==="R--")return new j(new $("L",3,2),2*t.amount);if(t.family==="D++")return new j(new $("U",3,2),-2*t.amount);if(t.family==="D--")return new j(new $("U",3,2),2*t.amount);if(t.family==="R_PLUSPLUS_")return new j(new $("L",3,2),-2*t.amount);if(t.family==="D_PLUSPLUS_")return new j(new $("U",3,2),-2*t.amount)}if(t.family==="y")return new j("Uv",t.amount);if(t.family==="x"&&Math.abs(t.amount)===2)return new j("DRRv",t.amount/2)}return this.child.notationToInternal(t)}notationToExternal(t){return t.family==="DRRv"&&Math.abs(t.amount)===1?new j(new $("x",t.innerLayer,t.outerLayer),t.amount*2):t.family==="DLLv"&&Math.abs(t.amount)===1?new j(new $("x",t.innerLayer,t.outerLayer),-t.amount*2):t.family==="Uv"?new j(new $("y",t.innerLayer,t.outerLayer),t.amount):t.family==="DDv"?new j("y",-t.amount):this.child.notationToExternal(t)}},Ht=class{constructor(t){this.slices=t}notationToInternal(t){const e=t.family;return t.innerLayer||t.outerLayer||(e==="x"?t=new j("Rv",t.amount):e==="y"?t=new j("Uv",t.amount):e==="z"&&(t=new j("Fv",t.amount)),(this.slices&1)===1&&(e==="E"?t=new j(new $("D",(this.slices+1)/2),t.amount):e==="M"?t=new j(new $("L",(this.slices+1)/2),t.amount):e==="S"&&(t=new j(new $("F",(this.slices+1)/2),t.amount))),this.slices>2&&(e==="e"?t=new j(new $("D",this.slices-1,2),t.amount):e==="m"?t=new j(new $("L",this.slices-1,2),t.amount):e==="s"&&(t=new j(new $("F",this.slices-1,2),t.amount)))),t}notationToExternal(t){const e=t.family;if(!(t.innerLayer||t.outerLayer)){if(e==="Rv")return new j("x",t.amount);if(e==="Uv")return new j("y",t.amount);if(e==="Fv")return new j("z",t.amount);if(e==="Lv")return new j("x",-t.amount);if(e==="Dv")return new j("y",-t.amount);if(e==="Bv")return new j("z",-t.amount)}return t}},Zt={U:"frl",L:"fld",R:"fdr",B:"dlr",u:"FRL",l:"FLD",r:"FDR",b:"DLR",Uv:"FRLv",Lv:"FLDv",Rv:"FDRv",Bv:"DLRv",D:"D",F:"F",BL:"L",BR:"R"},Wt={U:"FRL",L:"FLD",R:"FDR",B:"DLR",u:"frl",l:"fld",r:"fdr",b:"dlr",Uv:"FRLv",Lv:"FLDv",Rv:"FDRv",Bv:"DLRv",D:"D",F:"F",BL:"L",BR:"R",d:"d",f:"f",bl:"l",br:"r"},Dt={U:"FRL",L:"FLD",R:"FDR",B:"DLR"},Mt=new $("y"),zt=new $("Dv"),St=class{constructor(t){this.child=t,this.wcaHack=!1,this.map=Zt}notationToInternal(t){if(this.wcaHack&&t.innerLayer===2&&t.outerLayer===null){const s=Dt[t.family];if(s)return new j(new $(s,t.innerLayer,t.outerLayer),t.amount)}const e=this.map[t.family];return e?new j(new $(e,t.innerLayer,t.outerLayer),t.amount):Mt.isIdentical(t.quantum)?new j(zt,-t.amount):null}notationToExternal(t){if(this.wcaHack&&t.innerLayer===2&&t.outerLayer===null){for(const[e,s]of Object.entries(Dt))if(this.child.spinmatch(t.family,s))return new j(new $(e,t.innerLayer,t.outerLayer),t.amount)}for(const[e,s]of Object.entries(this.map))if(this.child.spinmatch(t.family,s))return new j(new $(e,t.innerLayer,t.outerLayer),t.amount);return zt.isIdentical(t.quantum)?new j(Mt,-t.amount):null}},Jt=class extends St{constructor(t){super(t),this.wcaHack=!0,this.map=Wt}},kt={U:"UBL",UL:"ULF",F:"UFR",UR:"URB",B:"DBL",D:"DFR",L:"DLF",R:"DRB",Uv:"UBLv",ULv:"ULFv",Fv:"UFRv",URv:"URBv",Bv:"DBLv",Dv:"DFRv",Lv:"DLFv",Rv:"DRBv"},ut=new $("x"),jt=new $("Rv"),Yt=new $("Lv"),pt=new $("y"),Ut=new $("Uv"),Vt=new $("Dv"),mt=new $("z"),Et=new $("Fv"),Xt=new $("Bv"),qt=class{constructor(t){this.child=t}notationToInternal(t){if(t.innerLayer||t.outerLayer)return null;const e=kt[t.family];return e?new j(new $(e,t.outerLayer,t.innerLayer),t.amount):ut.isIdentical(t.quantum)?new j(jt,t.amount):pt.isIdentical(t.quantum)?new j(Ut,t.amount):mt.isIdentical(t.quantum)?new j(Et,t.amount):null}notationToExternal(t){for(const[e,s]of Object.entries(kt))if(this.child.spinmatchv(t.family,s))return new j(new $(e,t.innerLayer,t.outerLayer),t.amount);return jt.isIdentical(t.quantum)?new j(ut,t.amount):Yt.isIdentical(t.quantum)?new j(ut,-t.amount):Ut.isIdentical(t.quantum)?new j(pt,t.amount):Vt.isIdentical(t.quantum)?new j(pt,-t.amount):Et.isIdentical(t.quantum)?new j(mt,t.amount):Xt.isIdentical(t.quantum)?new j(mt,-t.amount):null}};function De(t){let e=0;const s={};for(;e<t.length&&t[e][0]==="-";){const n=t[e++];if(n==="--rotations")s.addRotations=!0;else if(n==="--allmoves")s.allMoves=!0;else if(n==="--outerblockmoves")s.outerBlockMoves=!0;else if(n==="--vertexmoves")s.vertexMoves=!0;else if(n==="--nocorners")s.includeCornerOrbits=!1;else if(n==="--noedges")s.includeEdgeOrbits=!1;else if(n==="--noorientation")s.fixedOrientation=!0;else if(n==="--nocenters")s.includeCenterOrbits=!1;else if(n==="--omit")s.excludeOrbits=t[e].split(","),e++;else if(n==="--moves")s.moveList=t[e].split(","),e++;else if(n==="--optimize")s.optimizeOrbits=!0;else if(n==="--scramble")s.scrambleAmount=100;else if(n==="--fixcorner")s.fixedPieceType="v";else if(n==="--fixedge")s.fixedPieceType="e";else if(n==="--fixcenter")s.fixedPieceType="f";else if(n==="--orientcenters")s.orientCenters=!0;else if(n==="--puzzleorientation")s.puzzleOrientation=JSON.parse(t[e]),e++;else throw new Error(`Bad option: ${n}`)}return{puzzleDescription:It(t.slice(e).join(" ")),options:s}}var te=class{constructor(t={}){this.verbosity=0,this.allMoves=!1,this.vertexMoves=!1,this.addRotations=!1,this.moveList=null,this.fixedOrientation=!1,this.fixedPieceType=null,this.orientCenters=!1,this.includeCornerOrbits=!0,this.includeCenterOrbits=!0,this.includeEdgeOrbits=!0,this.excludeOrbits=[],this.optimizeOrbits=!1,this.grayCorners=!1,this.grayCenters=!1,this.grayEdges=!1,this.puzzleOrientation=null,this.puzzleOrientations=null,this.scrambleAmount=0,Object.assign(this,t)}},dt=[],gt=[];function nt(t){if(!dt[t]){const e=Array(t);for(let s=0;s<t;s++)e[s]=0;dt[t]=e}return dt[t]}function tt(t){if(!gt[t]){const e=Array(t);for(let s=0;s<t;s++)e[s]=s;gt[t]=e}return gt[t]}function ee(t){return new et(tt(t))}function se(t){let e=BigInt(1);for(;t>1;)e*=BigInt(t),t--;return e}function ie(t,e){if(t>e){const s=t;t=e,e=s}for(;t>0;){const s=e%t;e=t,t=s}return e}function Tt(t,e){return t/ie(t,e)*e}var et=class{constructor(t){this.n=t.length,this.p=t}toString(){return`Perm[${this.p.join(" ")}]`}mul(t){const e=Array(this.n);for(let s=0;s<this.n;s++)e[s]=t.p[this.p[s]];return new et(e)}rmul(t){const e=Array(this.n);for(let s=0;s<this.n;s++)e[s]=this.p[t.p[s]];return new et(e)}inv(){const t=Array(this.n);for(let e=0;e<this.n;e++)t[this.p[e]]=e;return new et(t)}compareTo(t){for(let e=0;e<this.n;e++)if(this.p[e]!==t.p[e])return this.p[e]-t.p[e];return 0}toGap(){const t=new Array,e=new Array(this.n);for(let s=0;s<this.p.length;s++){if(e[s]||this.p[s]===s)continue;const i=new Array;for(let n=s;!e[n];n=this.p[n])i.push(1+n),e[n]=!0;t.push(`(${i.join(",")})`)}return t.join("")}order(){let t=1;const e=new Array(this.n);for(let s=0;s<this.p.length;s++){if(e[s]||this.p[s]===s)continue;let i=0;for(let n=s;!e[n];n=this.p[n])i++,e[n]=!0;t=Tt(t,i)}return t}},vt=class{constructor(t,e){this.size=t,this.mod=e}reassemblySize(){return se(this.size)*BigInt(this.mod)**BigInt(this.size)}},ne=0;function yt(t,e){const s=j.fromString(e),i=t.notationToExternal(s);return i===null||s===i?e:i.toString()}var Ft=class{constructor(t,e,s,i,n,o,r){this.orbitnames=t,this.orbitdefs=e,this.solved=s,this.movenames=i,this.moveops=n,this.isRotation=o,this.forcenames=r}transformToKTransformationData(t){const e={};for(let s=0;s<this.orbitnames.length;s++)e[this.orbitnames[s]]=t.orbits[s].toKPuzzle();return e}static transformToKTransformationData(t,e){const s={};for(let i=0;i<t.length;i++)s[t[i]]=e.orbits[i].toKPuzzle();return s}describeSet(t,e,s){const i=this.orbitdefs[t].size,n=new Array(i);for(let o=0;o<i;o++)n[o]=[];for(let o=0;o<this.movenames.length;o++){if(this.isRotation[o])continue;let r=this.movenames[o];this.forcenames[o]||(r=yt(s,r),r[r.length-1]==="'"&&(r=r.substring(0,r.length-1)));const m=this.moveops[o].orbits[t];for(let l=0;l<i;l++)(m.perm[l]!==l||m.ori[l]!==0)&&n[l].push(r)}for(let o=0;o<i;o++)e.push(`# ${o+1} ${n[o].join(" ")}`)}toKsolve(t,e=new $t){const s=[];s.push(`Name ${t}`),s.push("");for(let i=0;i<this.orbitnames.length;i++)s.push(`Set ${this.orbitnames[i]} ${this.orbitdefs[i].size} ${this.orbitdefs[i].mod}`),this.describeSet(i,s,e);s.push(""),s.push("Solved");for(let i=0;i<this.orbitnames.length;i++)this.solved.orbits[i].appendDefinition(s,this.orbitnames[i],!1,!1);s.push("End");for(let i=0;i<this.movenames.length;i++){s.push("");let n=this.movenames[i];this.forcenames[i]||(n=yt(e,this.movenames[i]));let o=!1;n[n.length-1]==="'"&&(o=!0,n=n.substring(0,n.length-1)),s.push(`Move ${n}`);for(let r=0;r<this.orbitnames.length;r++)o?this.moveops[i].orbits[r].inv().appendDefinition(s,this.orbitnames[r],!0):this.moveops[i].orbits[r].appendDefinition(s,this.orbitnames[r],!0);s.push("End")}return s}toKPuzzleDefinition(t){const e={},s={};for(let n=0;n<this.orbitnames.length;n++){e[this.orbitnames[n]]={numPieces:this.orbitdefs[n].size,numOrientations:this.orbitdefs[n].mod};const o=this.solved.orbits[n].toKPuzzle();s[this.orbitnames[n]]={pieces:o.permutation,orientation:o.orientation}}const i={};if(t)for(let n=0;n<this.movenames.length;n++)i[this.movenames[n]]=this.transformToKTransformationData(this.moveops[n]);return{name:`PG3D #${++ne}`,orbits:e,startStateData:s,moves:i}}optimize(){const t=[],e=[],s=[],i=[];for(let n=0;n<this.moveops.length;n++)i.push([]);for(let n=0;n<this.orbitdefs.length;n++){const o=this.orbitdefs[n].mod,r=this.orbitdefs[n].size,m=new Ct(r),l=new Array(this.orbitdefs[n].size);for(let g=0;g<r;g++)l[g]=!1;for(let g=0;g<this.moveops.length;g++)for(let f=0;f<r;f++)(this.moveops[g].orbits[n].perm[f]!==f||this.moveops[g].orbits[n].ori[f]!==0)&&(this.isRotation[g]||(l[f]=!0),m.union(f,this.moveops[g].orbits[n].perm[f]));let h=!0;if(o>1){h=!1;const g=new Ct(this.orbitdefs[n].size*o);for(let f=0;f<this.moveops.length;f++)for(let a=0;a<r;a++)if(this.moveops[f].orbits[n].perm[a]!==a||this.moveops[f].orbits[n].ori[a]!==0)for(let p=0;p<o;p++)g.union(a*o+p,this.moveops[f].orbits[n].perm[a]*o+(p+this.moveops[f].orbits[n].ori[a])%o);for(let f=0;!h&&f<r;f++)for(let a=1;a<o;a++)g.find(f*o)===g.find(f*o+a)&&(h=!0);for(let f=0;!h&&f<r;f++)for(let a=0;a<f;a++)this.solved.orbits[n].perm[f]===this.solved.orbits[n].perm[a]&&(h=!0)}let b=-1,d=!1;for(let g=0;g<this.orbitdefs[n].size;g++)if(l[g]){const f=m.find(g);b<0?b=f:b!==f&&(d=!0)}for(let g=0;g<this.orbitdefs[n].size;g++){if(!l[g]||m.find(g)!==g)continue;const a=[],p=[];let w=0;for(let y=0;y<this.orbitdefs[n].size;y++)m.find(y)===g&&(a[w]=y,p[y]=w,w++);if(d?t.push(`${this.orbitnames[n]}_p${g}`):t.push(this.orbitnames[n]),h){e.push(new vt(w,this.orbitdefs[n].mod)),s.push(this.solved.orbits[n].remapVS(a,w));for(let y=0;y<this.moveops.length;y++)i[y].push(this.moveops[y].orbits[n].remap(a,p,w))}else{e.push(new vt(w,1)),s.push(this.solved.orbits[n].remapVS(a,w).killOri());for(let y=0;y<this.moveops.length;y++)i[y].push(this.moveops[y].orbits[n].remap(a,p,w).killOri())}}}return new Ft(t,e,new xt(s),this.movenames,i.map(n=>new rt(n)),this.isRotation,this.forcenames)}scramble(t){this.solved=this.solved.mul(this.getScrambleTransformation(t))}getScrambleTransformation(t){t<100&&(t=100);const e=[];for(let i=0;i<this.moveops.length;i++)e[i]=this.moveops[i];for(let i=0;i<e.length;i++){const n=Math.floor(Math.random()*e.length),o=e[i];e[i]=e[n],e[n]=o}t<e.length&&(t=e.length);for(let i=0;i<t;i++){const n=Math.floor(Math.random()*e.length),o=Math.floor(Math.random()*e.length),r=Math.floor(Math.random()*this.moveops.length);e[n]=e[n].mul(e[o]).mul(this.moveops[r]),Math.random()<.1&&(e[n]=e[n].mul(this.moveops[r]))}let s=e[0];for(let i=1;i<e.length;i++)s=s.mul(e[i]);return s}reassemblySize(){let t=BigInt(1);for(let e=0;e<this.orbitdefs.length;e++)t*=this.orbitdefs[e].reassemblySize();return t}},Y=class{constructor(t,e,s){this.perm=t,this.ori=e,this.orimod=s}static e(t,e){return new Y(tt(t),nt(t),e)}mul(t){const e=this.perm.length,s=new Array(e);if(this.orimod===1){for(let i=0;i<e;i++)s[i]=this.perm[t.perm[i]];return new Y(s,this.ori,this.orimod)}else{const i=new Array(e);for(let n=0;n<e;n++)s[n]=this.perm[t.perm[n]],i[n]=(this.ori[t.perm[n]]+t.ori[n])%this.orimod;return new Y(s,i,this.orimod)}}inv(){const t=this.perm.length,e=new Array(t),s=new Array(t);for(let i=0;i<t;i++)e[this.perm[i]]=i,s[this.perm[i]]=(this.orimod-this.ori[i])%this.orimod;return new Y(e,s,this.orimod)}equal(t){const e=this.perm.length;for(let s=0;s<e;s++)if(this.perm[s]!==t.perm[s]||this.ori[s]!==t.ori[s])return!1;return!0}killOri(){const t=this.perm.length;for(let e=0;e<t;e++)this.ori[e]=0;return this.orimod=1,this}toPerm(){const t=this.orimod;if(t===1)return new et(this.perm);const e=this.perm.length,s=new Array(e*t);for(let i=0;i<e;i++)for(let n=0;n<t;n++)s[i*t+n]=t*this.perm[i]+(this.ori[i]+n)%t;return new et(s)}identicalPieces(){const t=[],e=this.perm.length,s=[];for(let i=0;i<e;i++){const n=this.perm[i];if(t[n]===void 0){const o=[i];t[n]=!0;for(let r=i+1;r<e;r++)this.perm[r]===n&&o.push(r);s.push(o)}}return s}order(){return this.toPerm().order()}isIdentity(){const t=this.perm.length;if(this.perm===tt(t)&&this.ori===nt(t))return!0;for(let e=0;e<t;e++)if(this.perm[e]!==e||this.ori[e]!==0)return!1;return!0}zeroOris(){const t=this.perm.length;if(this.ori===nt(t))return!0;for(let e=0;e<t;e++)if(this.ori[e]!==0)return!1;return!0}remap(t,e,s){const i=new Array(s),n=new Array(s);for(let o=0;o<s;o++)i[o]=e[this.perm[t[o]]],n[o]=this.ori[t[o]];return new Y(i,n,this.orimod)}remapVS(t,e){const s=new Array(e),i=new Array(e);let n=0;const o=[];for(let r=0;r<e;r++){const m=this.perm[t[r]];o[m]===void 0&&(o[m]=n++),s[r]=o[m],i[r]=this.ori[t[r]]}return new Y(s,i,this.orimod)}appendDefinition(t,e,s,i=!0){if(!(i&&this.isIdentity())&&(t.push(e),t.push(this.perm.map(n=>n+1).join(" ")),!this.zeroOris()))if(s){const n=new Array(this.ori.length);for(let o=0;o<n.length;o++)n[this.perm[o]]=this.ori[o];t.push(n.join(" "))}else t.push(this.ori.join(" "))}toKPuzzle(){const t=this.perm.length;return this.isIdentity()?(Y.kcache[t]||(Y.kcache[t]={permutation:tt(t),orientation:nt(t)}),Y.kcache[t]):{permutation:this.perm,orientation:this.ori}}},it=Y;it.kcache=[];var Nt=class{constructor(t){this.orbits=t}internalMul(t){const e=[];for(let s=0;s<this.orbits.length;s++)e.push(this.orbits[s].mul(t.orbits[s]));return e}internalInv(){const t=[];for(const e of this.orbits)t.push(e.inv());return t}equal(t){for(let e=0;e<this.orbits.length;e++)if(!this.orbits[e].equal(t.orbits[e]))return!1;return!0}killOri(){for(const t of this.orbits)t.killOri();return this}toPerm(){const t=new Array;let e=0;for(const i of this.orbits){const n=i.toPerm();t.push(n),e+=n.n}const s=new Array(e);e=0;for(const i of t){for(let n=0;n<i.n;n++)s[e+n]=e+i.p[n];e+=i.n}return new et(s)}identicalPieces(){const t=[];let e=0;for(const s of this.orbits){const i=s.orimod,n=s.identicalPieces();for(let o=0;o<n.length;o++)t.push(n[o].map(r=>r*i+e));e+=i*s.perm.length}return t}order(){let t=1;for(const e of this.orbits)t=Tt(t,e.order());return t}},rt=class extends Nt{constructor(t){super(t)}mul(t){return new rt(this.internalMul(t))}mulScalar(t){if(t===0)return this.e();let e=this;for(t<0&&(e=e.inv(),t=-t);(t&1)===0;)e=e.mul(e),t>>=1;if(t===1)return e;let s=e,i=this.e();for(;t>0;)t&1&&(i=i.mul(s)),t>1&&(s=s.mul(s)),t>>=1;return i}inv(){return new rt(this.internalInv())}e(){return new rt(this.orbits.map(t=>it.e(t.perm.length,t.orimod)))}},xt=class extends Nt{constructor(t){super(t)}mul(t){return new xt(this.internalMul(t))}},Ct=class{constructor(t){this.n=t,this.heads=new Array(t);for(let e=0;e<t;e++)this.heads[e]=e}find(t){let e=this.heads[t];return this.heads[e]===e||(e=this.find(this.heads[e]),this.heads[t]=e),e}union(t,e){const s=this.find(t),i=this.find(e);s<i?this.heads[i]=s:s>i&&(this.heads[s]=i)}};function oe(t,e){const s=t.moveops.length;if(s>30)throw new Error("Canon info too big for bitmask");const i=[],n=[];for(let r=0;r<s;r++){const m=t.moveops[r];i.push(m.order());let l=0;for(let h=0;h<s;h++){if(h===r)continue;const b=t.moveops[h];m.mul(b).equal(b.mul(m))&&(l|=1<<h)}n.push(l)}let o={};o[0]=1;for(let r=0;r<100;r++){let m=0;const l={};let h=0;for(const b in o){const d=+b,g=o[d];m+=g,h++;for(let f=0;f<i.length;f++)if((d>>f&1)===0&&(d&n[f]&(1<<f)-1)===0){const a=d&n[f]|1<<f;l[a]===void 0&&(l[a]=0),l[a]+=(i[f]-1)*g}}e(`${r}: canonseq ${m} states ${h}`),o=l}}var Bt={"2x2x2":"c f 0","3x3x3":"c f 0.333333333333333","4x4x4":"c f 0.5 f 0","5x5x5":"c f 0.6 f 0.2","6x6x6":"c f 0.666666666666667 f 0.333333333333333 f 0","7x7x7":"c f 0.714285714285714 f 0.428571428571429 f 0.142857142857143","8x8x8":"c f 0.75 f 0.5 f 0.25 f 0","9x9x9":"c f 0.777777777777778 f 0.555555555555556 f 0.333333333333333 f 0.111111111111111","10x10x10":"c f 0.8 f 0.6 f 0.4 f 0.2 f 0","11x11x11":"c f 0.818181818181818 f 0.636363636363636 f 0.454545454545455 f 0.272727272727273 f 0.0909090909090909","12x12x12":"c f 0.833333333333333 f 0.666666666666667 f 0.5 f 0.333333333333333 f 0.166666666666667 f 0","13x13x13":"c f 0.846153846153846 f 0.692307692307692 f 0.538461538461538 f 0.384615384615385 f 0.230769230769231 f 0.0769230769230769","20x20x20":"c f 0 f .1 f .2 f .3 f .4 f .5 f .6 f .7 f .8 f .9","30x30x30":"c f 0 f .066667 f .133333 f .2 f .266667 f .333333 f .4 f .466667 f .533333 f .6 f .666667 f .733333 f .8 f .866667 f .933333","40x40x40":"c f 0 f .05 f .1 f .15 f .2 f .25 f .3 f .35 f .4 f .45 f .5 f .55 f .6 f .65 f .7 f .75 f .8 f .85 f .9 f .95",skewb:"c v 0","master skewb":"c v 0.275","professor skewb":"c v 0 v 0.38","compy cube":"c v 0.915641442663986",helicopter:"c e 0.707106781186547","curvy copter":"c e 0.83",dino:"c v 0.577350269189626","little chop":"c e 0",pyramorphix:"t e 0",mastermorphix:"t e 0.346184634065199",pyraminx:"t v 0.333333333333333 v 1.66666666666667",tetraminx:"t v 0.333333333333333","master pyraminx":"t v 0 v 1 v 2","master tetraminx":"t v 0 v 1","professor pyraminx":"t v -0.2 v 0.6 v 1.4 v 2.2","professor tetraminx":"t v -0.2 v 0.6 v 1.4","Jing pyraminx":"t f 0","master pyramorphix":"t e 0.866025403784437",megaminx:"d f 0.7",gigaminx:"d f 0.64 f 0.82",teraminx:"d f 0.64 f 0.76 f 0.88",petaminx:"d f 0.64 f 0.73 f 0.82 f 0.91",examinx:"d f 0.64 f 0.712 f 0.784 f 0.856 f 0.928",zetaminx:"d f 0.64 f 0.7 f 0.76 f 0.82 f 0.88 f 0.94",yottaminx:"d f 0.64 f 0.6914 f 0.7429 f 0.7943 f 0.8457 f 0.8971 f 0.9486",pentultimate:"d f 0","master pentultimate":"d f 0.1","elite pentultimate":"d f 0 f 0.145905",starminx:"d v 0.937962370425399","starminx 2":"d f 0.23606797749979","pyraminx crystal":"d f 0.447213595499989",chopasaurus:"d v 0","big chop":"d e 0","skewb diamond":"o f 0",FTO:"o f 0.333333333333333","master FTO":"o f 0.5 f 0","Christopher's jewel":"o v 0.577350269189626",octastar:"o e 0","Trajber's octahedron":"o v 0.433012701892219","radio chop":"i f 0",icosamate:"i v 0","icosahedron 2":"i v 0.18759247376021","icosahedron 3":"i v 0.18759247376021 e 0","icosahedron static faces":"i v 0.84","icosahedron moving faces":"i v 0.73","Eitan's star":"i f 0.61803398874989","2x2x2 + dino":"c f 0 v 0.577350269189626","2x2x2 + little chop":"c f 0 e 0","dino + little chop":"c v 0.577350269189626 e 0","2x2x2 + dino + little chop":"c f 0 v 0.577350269189626 e 0","megaminx + chopasaurus":"d f 0.61803398875 v 0","starminx combo":"d f 0.23606797749979 v 0.937962370425399"},st=1e-9;function bt(t){let e=new C(0,0,0,0);for(let s=0;s<t.length;s++)e=e.sum(t[s]);return e.smul(1/t.length)}function re(t,e,s,i){const n=i[t].intersect3(i[e],i[s]);if(!n)return n;for(let o=0;o<i.length;o++)if(o!==t&&o!==e&&o!==s){const r=i[o].b*n.b+i[o].c*n.c+i[o].d*n.d;if(i[o].a>0&&r>i[o].a||i[o].a<0&&r<i[o].a)return!1}return n}var C=class{constructor(t,e,s,i){this.a=t,this.b=e,this.c=s,this.d=i}mul(t){return new C(this.a*t.a-this.b*t.b-this.c*t.c-this.d*t.d,this.a*t.b+this.b*t.a+this.c*t.d-this.d*t.c,this.a*t.c-this.b*t.d+this.c*t.a+this.d*t.b,this.a*t.d+this.b*t.c-this.c*t.b+this.d*t.a)}toString(){return`Q[${this.a},${this.b},${this.c},${this.d}]`}dist(t){return Math.hypot(this.a-t.a,this.b-t.b,this.c-t.c,this.d-t.d)}len(){return Math.hypot(this.a,this.b,this.c,this.d)}cross(t){return new C(0,this.c*t.d-this.d*t.c,this.d*t.b-this.b*t.d,this.b*t.c-this.c*t.b)}dot(t){return this.b*t.b+this.c*t.c+this.d*t.d}normalize(){const t=Math.sqrt(this.dot(this));return new C(this.a/t,this.b/t,this.c/t,this.d/t)}makenormal(){return new C(0,this.b,this.c,this.d).normalize()}normalizeplane(){const t=Math.hypot(this.b,this.c,this.d);return new C(this.a/t,this.b/t,this.c/t,this.d/t)}smul(t){return new C(this.a*t,this.b*t,this.c*t,this.d*t)}sum(t){return new C(this.a+t.a,this.b+t.b,this.c+t.c,this.d+t.d)}sub(t){return new C(this.a-t.a,this.b-t.b,this.c-t.c,this.d-t.d)}angle(){return 2*Math.acos(this.a)}invrot(){return new C(this.a,-this.b,-this.c,-this.d)}det3x3(t,e,s,i,n,o,r,m,l){return t*(n*l-o*m)+e*(o*r-i*l)+s*(i*m-n*r)}rotateplane(t){const e=t.mul(new C(0,this.b,this.c,this.d)).mul(t.invrot());return e.a=this.a,e}orthogonal(){const t=Math.abs(this.b),e=Math.abs(this.c),s=Math.abs(this.d);return t<e&&t<s?this.cross(new C(0,1,0,0)).normalize():e<t&&e<s?this.cross(new C(0,0,1,0)).normalize():this.cross(new C(0,0,0,1)).normalize()}pointrotation(t){const e=this.normalize();if(t=t.normalize(),e.sub(t).len()<st)return new C(1,0,0,0);let s=e.sum(t);s.len()<st?s=s.orthogonal():s=s.normalize();const i=e.cross(s);return i.a=e.dot(s),i}unproject(t){return this.sum(t.smul(-this.dot(t)/(this.len()*t.len())))}rotatepoint(t){return t.mul(this).mul(t.invrot())}rotateface(t){return t.map(e=>e.rotatepoint(this))}intersect3(t,e){const s=this.det3x3(this.b,this.c,this.d,t.b,t.c,t.d,e.b,e.c,e.d);return Math.abs(s)<st?!1:new C(0,this.det3x3(this.a,this.c,this.d,t.a,t.c,t.d,e.a,e.c,e.d)/s,this.det3x3(this.b,this.a,this.d,t.b,t.a,t.d,e.b,e.a,e.d)/s,this.det3x3(this.b,this.c,this.a,t.b,t.c,t.a,e.b,e.c,e.a)/s)}side(t){return t>st?1:t<-st?-1:0}cutface(t){const e=this.a;let s=0,i=null;for(let n=0;n<t.length;n++)s|=1<<this.side(t[n].dot(this)-e)+1;if((s&5)===5){i=[];const n=t.map(o=>this.side(o.dot(this)-e));for(let o=-1;o<=1;o+=2){const r=[];for(let m=0;m<t.length;m++){(n[m]===o||n[m]===0)&&r.push(t[m]);const l=(m+1)%t.length;if(n[m]+n[l]===0&&n[m]!==0){const h=t[m].dot(this)-e,b=t[l].dot(this)-e,d=h/(h-b),g=t[m].smul(1-d).sum(t[l].smul(d));r.push(g)}}i.push(r)}}return i}cutfaces(t){const e=[];for(let s=0;s<t.length;s++){const i=t[s],n=this.cutface(i);n?(e.push(n[0]),e.push(n[1])):e.push(i)}return e}faceside(t){const e=this.a;for(let s=0;s<t.length;s++){const i=this.side(t[s].dot(this)-e);if(i!==0)return i}throw new Error("Could not determine side of plane in faceside")}sameplane(t){const e=this.normalize(),s=t.normalize();return e.dist(s)<st||e.dist(s.smul(-1))<st}makecut(t){return new C(t,this.b,this.c,this.d)}},ct=1e-9;function ae(){const t=Math.sqrt(.5);return[new C(t,t,0,0),new C(t,0,t,0)]}function le(){return[new C(.5,.5,.5,.5),new C(.5,.5,.5,-.5)]}function he(){const t=2*Math.PI/10;let e=.5+.3*Math.sqrt(5),s=.5+.1*Math.sqrt(5);const i=Math.sqrt(e*e+s*s);return e/=i,s/=i,[new C(Math.cos(t),e*Math.sin(t),s*Math.sin(t),0),new C(.5,.5,.5,.5)]}function ce(){let t=.16666666666666666+Math.sqrt(5)/6,e=2/3+Math.sqrt(5)/3;const s=Math.sqrt(t*t+e*e);t/=s,e/=s;const i=2*Math.PI/6;return[new C(Math.cos(i),t*Math.sin(i),e*Math.sin(i),0),new C(Math.cos(i),-t*Math.sin(i),e*Math.sin(i),0)]}function fe(){const t=Math.sqrt(.5);return[new C(.5,.5,.5,.5),new C(t,0,0,t)]}function ue(t){const e=[new C(1,0,0,0)];for(let s=0;s<e.length;s++)for(let i=0;i<t.length;i++){const n=t[i].mul(e[s]),o=n.smul(-1);let r=!1;for(let m=0;m<e.length;m++)if(n.dist(e[m])<ct||o.dist(e[m])<ct){r=!0;break}r||e.push(n)}return e}function Pt(t,e){const s=[],i=[];for(let n=0;n<e.length;n++){const o=t.rotateplane(e[n]);let r=!1;for(let m=0;m<s.length;m++)if(o.dist(s[m])<ct){r=!0;break}r||(s.push(o),i.push(e[n]))}return i}function Ot(t){const e=[];for(let s=1;s<t.length;s++)for(let i=s+1;i<t.length;i++){const n=re(0,s,i,t);if(n){let o=!1;for(let r=0;r<e.length;r++)if(n.dist(e[r])<ct){o=!0;break}o||e.push(n)}}for(;;){let s=!1;for(let i=0;i<e.length;i++){const n=(i+1)%e.length;if(t[0].dot(e[i].cross(e[n]))<0){const o=e[i];e[i]=e[n],e[n]=o,s=!0}}if(!s)break}return e}var pe=class{constructor(){this.mult=[]}multiply(t){for(let e=2;e*e<=t;e++)for(;t%e===0;)this.mult[e]!==void 0?this.mult[e]++:this.mult[e]=1,t/=e;t>1&&(this.mult[t]!==void 0?this.mult[t]++:this.mult[t]=1)}toString(){let t="";for(let e=0;e<this.mult.length;e++)this.mult[e]!==void 0&&(t!==""&&(t+="*"),t+=e,this.mult[e]>1&&(t+=`^${this.mult[e]}`));return t}};function me(t,e){const s=t[0].p.length,i=ee(s);let n=[],o=[],r=[],m=[],l=[];function h(f){for(let a=f.p.length-1;a>=0;a--){const p=f.p[a];if(p!==a){if(!n[a][p])return!1;f=f.mul(o[a][p])}}return!0}function b(f,a,p){m[f].push(a),l[f].push(p);for(let w=0;w<n[f].length;w++)n[f][w]&&d(f,n[f][w].mul(a),p+r[f][w])}function d(f,a,p){const w=a.p[f];if(!n[f][w]){n[f][w]=a,o[f][w]=a.inv(),r[f][w]=p;for(let v=0;v<m[f].length;v++)d(f,a.mul(m[f][v]),p+l[f][v]);return}const y=a.mul(o[f][w]);h(y)||b(f-1,y,p+r[f][w])}function g(){n=[],o=[],m=[],r=[],l=[];for(let p=0;p<s;p++)n.push([]),o.push([]),r.push([]),m.push([]),l.push([]),n[p][p]=i,o[p][p]=i,r[p][p]=0;let f=0,a=BigInt(1);for(let p=0;p<t.length;p++){b(s-1,t[p],1),a=BigInt(1);let w=0,y=0;const v=new pe;for(let B=0;B<s;B++){let D=0,T=0;for(let S=0;S<s;S++)n[B][S]&&(D++,T+=r[B][S],B!==S&&f++);w+=m[B].length,a*=BigInt(D),D>1&&v.multiply(D);const _=T/D;y+=_}e(`${p}: sz ${a} T ${w} sol ${y} none ${f} mults ${v.toString()}`)}return a}return g()}var at=class{constructor(t){this.coords=new Array(t.length*3);for(let e=0;e<t.length;e++)this.coords[3*e]=t[e].b,this.coords[3*e+1]=t[e].c,this.coords[3*e+2]=t[e].d;this.length=t.length}get(t){return new C(0,this.coords[3*t],this.coords[3*t+1],this.coords[3*t+2])}centermass(){let t=0,e=0,s=0;for(let i=0;i<this.length;i++)t+=this.coords[3*i],e+=this.coords[3*i+1],s+=this.coords[3*i+2];return new C(0,t/this.length,e/this.length,s/this.length)}rotate(t){const e=[];for(let s=0;s<this.length;s++)e.push(this.get(s).rotatepoint(t));return new at(e)}rotateforward(){const t=[];for(let e=1;e<this.length;e++)t.push(this.get(e));return t.push(this.get(0)),new at(t)}},Lt=class{constructor(t,e,s){this.face=t,this.left=e,this.right=s}split(t){const e=t.cutface(this.face);return e!==null&&(this.left===void 0?(this.left=new Lt(e[0]),this.right=new Lt(e[1])):(this.left=this.left?.split(t),this.right=this.right?.split(t))),this}collect(t,e){return this.left===void 0?t.push(new at(this.face)):e?(this.left?.collect(t,!1),this.right?.collect(t,!0)):(this.right?.collect(t,!1),this.left?.collect(t,!0)),t}};function de(t,e){const s=[];for(const i of t)for(const n of e)s.push(n.rotate(i));return s}var G=1e-9,ge="PuzzleGeometry 0.1 Copyright 2018 Tomas Rokicki.";function be(){return{4:[["F","D","L","R"]],6:[["F","D","L","U","R"],["R","F","","B",""]],8:[["F","D","L","R"],["D","F","BR",""],["BR","D","","BB"],["BB","BR","U","BL"]],12:[["U","FF","","","",""],["FF","U","R","FR","FL","L"],["R","FF","","","DR",""],["DR","R","","BB","",""],["BB","DR","BR","BL","DL","DD"]],20:[["R","C","F","E"],["F","R","L","U"],["L","F","A",""],["E","R","G","I"],["I","E","S","H"],["S","I","J","B"],["B","S","K","D"],["K","B","M","O"],["O","K","P","N"],["P","O","Q",""]]}}function we(){return{4:{F:"#56b4e9",D:"#ffffff",L:"#d55e00",R:"#009e73"},6:{U:"#f0e442",F:"#56b4e9",R:"#d55e00",D:"#ffffff",B:"#009e73",L:"#cc79a7"},8:{U:"#f0e442",F:"#d55e00",R:"#56b4e9",D:"#ffffff",BB:"#009e73",L:"#8800dd",BL:"#cc79a7",BR:"#aaaaaa"},12:{U:"#f0e442",FF:"#008800",R:"#d55e00",FR:"#ffffd0",FL:"#3399ff",L:"#8800dd",DR:"#ff66cc",BB:"#99ff00",BR:"#0000ff",BL:"#ffffff",DL:"#cc79a7",DD:"#aaaaaa"},20:{R:"#db69f0",C:"#178fde",F:"#23238b",E:"#9cc726",L:"#2c212d",U:"#177fa7",A:"#e0de7f",G:"#2b57c0",I:"#41126b",S:"#4b8c28",H:"#7c098d",J:"#7fe7b4",B:"#85fb74",K:"#3f4bc3",D:"#0ff555",M:"#f1c2c8",O:"#58d340",P:"#c514f2",N:"#14494e",Q:"#8b1be1"}}}var ve={4:{v:["DFR","DLF","DRL","FLR"],e:["FR","LF","DF","DL","RD","RL"],c:["DF","FD","RL","LR"]},6:{v:["URF","UBR","ULB","UFL","DFR","DRB","DBL","DLF"],e:["UF","UR","UB","UL","DF","DR","DB","DL","FR","FL","BR","BL"],c:["UB","LU","FU","RU","BU","DF"]},8:{v:["UBBBRR","URFL","ULBLBB","DBRBBBL","DBLLF","DFRBR"],e:["UL","UBB","UR","BRD","BLD","FD","BRR","FR","FL","BLL","BLBB","BRBB"],c:["BBU","LU","RU","BRD","FD","BLD","DF","UBB"]},12:{v:["URFF","UFFL","ULBL","UBLBR","UBRR","DDDRBB","DDBBDL","DDDLFL","DDFLFR","DDFRDR","LFLDL","FLLFF","FFFRFL","FRFFR","RDRFR","DRRBR","BRBBDR","BBBRBL","BLDLBB","DLBLL"],e:["UFF","UR","UBR","UBL","UL","DRR","DRBR","DRBB","DRDD","DRFR","DLBB","DLBL","DLL","DLFL","DLDD","FLFR","FRFF","FFFL","BBBR","BRBL","BLBB","FRDD","FLDD","FLL","FFL","FFR","FRR","BBDD","BRR","BLL"],c:["UFF","FFU","DDBB","BBDD","FLDD","FRDD","BRU","BLU","LFL","RFL","DRBR","DLBL"]},20:{v:["FLPQU","FUGER","FRCAL","HCREI","ISBDH","JSIEG","BSJMK","MQPOK","ONDBK","NOPLA","UQMJG","DNACH"],e:["FU","FL","FR","EG","ER","EI","SJ","SI","SB","KM","KB","KO","PQ","PO","PL","UG","JG","MQ","UQ","HC","HD","ND","NA","JM","CA","AL","CR","HI","DB","NO"],c:["FU","UF","GE","EG","JS","SJ","MK","KM","QP","PQ","LA","AL","RC","CR","IH","HI","BD","DB","ON","NO"]}};function ye(){return{4:[["FLR",[0,1,0]],["F",[0,0,1]]],6:[["U",[0,1,0]],["F",[0,0,1]]],8:[["U",[0,1,0]],["F",[0,0,1]]],12:[["U",[0,1,0]],["FF",[0,0,1]]],20:[["GUQMJ",[0,1,0]],["F",[0,0,1]]]}}function lt(t,e){for(let s=0;s<t.length;s++)if(t[s][0].dist(e)<G)return s;throw new Error("Element not found")}function Me(){return Bt}function ze(t){return Bt[t]}var ke=["c","t","o","d","i"],je=["f","v","e"];function It(t){const e=t.split(/ /).filter(Boolean);if(e.length%2===0)return null;const s=e[0];if(s!=="o"&&s!=="c"&&s!=="i"&&s!=="d"&&s!=="t")return null;const i=[];for(let n=1;n<e.length;n+=2){if(e[n]!=="f"&&e[n]!=="v"&&e[n]!=="e")return null;i.push({cutType:e[n],distance:parseFloat(e[n+1])})}return{shape:s,cuts:i}}function Le(t,e={}){const s=It(t);if(s===null)throw new Error("Could not parse the puzzle description");const i=new Be(s,Object.assign({},{allMoves:!0},e));return i.allstickers(),i.genperms(),i}function Ue(t,e){return Le(Bt[t],e)}function Fe(t,e,s){let i=!1;s-e[1]<e[0]&&(t=[t[2],t[3],t[0],t[1]],e=[s-e[1],s-e[0]],i=!0);let n=t[0],o="";if(e[0]===0&&e[1]===s)n=`${n}v`;else if(e[0]===e[1])e[1]>0&&(o=String(e[1]+1));else if(e[0]===0)n=n.toLowerCase(),e[1]>1&&(o=String(e[1]+1));else throw new Error(`We only support slice and outer block moves right now. ${e}`);return[o+n,i]}function xe(t,e){const s=[];let i=0;for(;i<t.length;){i>0&&i<t.length&&t[i]==="_"&&i++;let n="";for(const o of e)t.substr(i).startsWith(o[1])&&o[1].length>n.length&&(n=o[1]);if(n!=="")s.push(n),i+=n.length;else throw new Error(`Could not split ${t} into face names.`)}return s}function ht(t,e){return[t.b/e,-t.c/e,t.d/e]}function wt(t,e){const s=[],i=t.length;for(let n=0;n<i;n++){const o=ht(t.get(i-n-1),e);s[3*n]=o[0],s[3*n+1]=o[1],s[3*n+2]=o[2]}return s}var Be=class{constructor(t,e){this.puzzleDescription=t,this.cmovesbyslice=[],this.duplicatedFaces=[],this.duplicatedCubies=[],this.fixedCubie=-1,this.net=[],this.colors=[],this.notationMapper=new $t,this.addNotationMapper="",this.setReidOrder=!1,this.options=new te(e),this.options.verbosity>0&&console.log(this.header("# ")),this.create(t)}create(t){const{shape:e,cuts:s}=t;this.moveplanes=[],this.moveplanes2=[],this.faces=[],this.cubies=[];let i=null;switch(e){case"c":{i=ae();break}case"o":{i=fe();break}case"i":{i=ce();break}case"t":{i=le();break}case"d":{i=he();break}default:throw new Error(`Bad shape argument: ${e}`)}this.rotations=ue(i),this.options.verbosity&&console.log(`# Rotations: ${this.rotations.length}`);const n=i[0];this.baseplanerot=Pt(n,this.rotations);const o=this.baseplanerot.map(c=>n.rotateplane(c));this.baseplanes=o,this.baseFaceCount=o.length;const r=be()[o.length];this.net=r,this.colors=we()[o.length],this.options.verbosity>0&&console.log(`# Base planes: ${o.length}`);const m=Ot(o),l=new C(0,0,0,0);this.options.verbosity>0&&console.log(`# Face vertices: ${m.length}`);const h=o[0].makenormal(),b=m[0].sum(m[1]).makenormal(),d=m[0].makenormal(),g=new C(1,h.b,h.c,h.d);this.options.verbosity>0&&console.log(`# Boundary is ${g}`);const a=Pt(g,this.rotations).map(c=>g.rotateplane(c)),p=Ot(a);this.edgedistance=p[0].sum(p[1]).smul(.5).dist(l),this.vertexdistance=p[0].dist(l);const w=[],y=[];let v=!1,B=!1,D=!1;for(const c of s){let L=null,U=0;switch(c.cutType){case"f":{L=h,U=1,v=!0;break}case"v":{L=d,U=this.vertexdistance,D=!0;break}case"e":{L=b,U=this.edgedistance,B=!0;break}default:throw new Error(`Bad cut argument: ${c.cutType}`)}w.push(L.makecut(c.distance)),y.push(c.distance<U)}this.options.addRotations&&(v||w.push(h.makecut(10)),D||w.push(d.makecut(10)),B||w.push(b.makecut(10))),this.basefaces=[];for(const c of this.baseplanerot){const L=c.rotateface(p);this.basefaces.push(new at(L))}const T=[],_=[],S=[],u=[],x=p.length;function E(c,L,U){for(const M of c)if(M[0].dist(L)<G){M.push(U);return}c.push([L,U])}for(let c=0;c<this.baseplanerot.length;c++){const L=this.baseplanerot[c].rotateface(p);for(let U=0;U<L.length;U++){const M=(U+1)%L.length,O=L[U].sum(L[M]).smul(.5);E(u,O,c)}}const z=[];for(let c=0;c<this.baseplanerot.length;c++){const L=this.baseplanerot[c].rotateface(p),U=[];for(let M=0;M<L.length;M++){const O=(M+1)%L.length,I=L[M].sum(L[O]).smul(.5),Q=u[lt(u,I)];if(c===Q[1])U.push(Q[2]);else if(c===Q[2])U.push(Q[1]);else throw new Error("Could not find edge")}z.push(U)}const F={},R=[];R.push(r[0][0]),F[r[0][0]]=0,R[z[0][0]]=r[0][1],F[r[0][1]]=z[0][0];for(const c of r){const L=c[0],U=F[L];if(U===void 0)throw new Error("Bad edge description; first edge not connected");let M=-1;for(let O=0;O<z[U].length;O++){const I=R[z[U][O]];if(I!==void 0&&I===c[1]){M=O;break}}if(M<0)throw new Error("First element of a net not known");for(let O=2;O<c.length;O++){if(c[O]==="")continue;const I=z[U][(O+M-1)%x],Q=R[I];if(Q!==void 0&&Q!==c[O])throw new Error("Face mismatch in net");R[I]=c[O],F[c[O]]=I}}for(let c=0;c<this.baseplanerot.length;c++){const L=this.baseplanerot[c].rotateface(p),U=g.rotateplane(this.baseplanerot[c]),M=R[c];T.push([L,M]),_.push([U,M])}for(let c=0;c<this.baseplanerot.length;c++){const L=this.baseplanerot[c].rotateface(p),U=R[c];for(let M=0;M<L.length;M++){const O=(M+1)%L.length,I=L[M].sum(L[O]).smul(.5),Q=(M+2)%L.length,At=L[O].sum(L[Q]).smul(.5),Gt=lt(u,I),Kt=lt(u,At);E(S,L[O],[U,Kt,Gt])}}this.swizzler=new ft(T.map(c=>c[1]));const k=this.swizzler.prefixFree?"":"_",N=ve[this.baseFaceCount],P=[];for(let c=0;c<this.baseFaceCount;c++)P[1<<c]=c;{const c=N.v;for(const L of c){const U=this.swizzler.splitByFaceNames(L);let M=0;for(const O of U)M|=1<<O;P[M]=U[0]}}{const c=N.e;for(const L of c){const U=this.swizzler.splitByFaceNames(L);let M=0;for(const O of U)M|=1<<O;P[M]=U[0]}}{const c=N.c;for(const L of c){const U=this.swizzler.splitByFaceNames(L),M=1<<U[0]|1<<this.baseFaceCount;P[M]=U[1]}}for(let c=0;c<u.length;c++){if(u[c].length!==3)throw new Error(`Bad length in edge names ${u[c]}`);const L=u[c][1],U=u[c][2];let M=R[L];const O=R[U],I=1<<L|1<<U;P[I]===L?M=M+k+O:M=O+k+M,u[c]=[u[c][0],M]}for(let c=0;c<S.length;c++){let L=0;if(S[c].length<4)throw new Error("Bad length in vertex names");for(let I=1;I<S[c].length;I++)L|=1<<F[S[c][I][0]];const U=P[L];let M=-1;for(let I=1;I<S[c].length;I++)U===F[S[c][I][0]]&&(M=I);if(M<0)throw new Error("Internal error; couldn't find face name when fixing corners");let O="";for(let I=1;I<S[c].length;I++){I===1?O=S[c][M][0]:O=O+k+S[c][M][0];for(let Q=1;Q<S[c].length;Q++)if(S[c][M][1]===S[c][Q][2]){M=Q;break}}S[c]=[S[c][0],O]}this.markedface=P,this.options.verbosity>1&&(console.log(`# Face names: ${T.map(c=>c[1]).join(" ")}`),console.log(`# Edge names: ${u.map(c=>c[1]).join(" ")}`),console.log(`# Vertex names: ${S.map(c=>c[1]).join(" ")}`));const A=[];for(const c of _)A.push([c[0].makenormal(),c[1],"f"]);for(const c of u)A.push([c[0].makenormal(),c[1],"e"]);for(const c of S)A.push([c[0].makenormal(),c[1],"v"]);this.facenames=T,this.faceplanes=_,this.edgenames=u,this.vertexnames=S,this.geonormals=A;const W=A.map(c=>c[1]);this.swizzler.setGripNames(W),this.options.verbosity>0&&console.log(`# Distances: face ${1} edge ${this.edgedistance} vertex ${this.vertexdistance}`);for(let c=0;c<w.length;c++)for(const L of this.rotations){const U=w[c].rotateplane(L);let M=!1;for(const O of this.moveplanes)if(U.sameplane(O)){M=!0;break}M||(this.moveplanes.push(U),y[c]&&this.moveplanes2.push(U))}let H=new Lt(p);const J=this.moveplanes2.slice();let V=31;for(let c=0;c<J.length;c++){const L=c+Math.floor((J.length-c)*(V/65536));H=H.split(J[L]),J[L]=J[c],V=(V*1657+101)%65536}const Z=H.collect([],!0);this.faces=Z,this.options.verbosity>0&&console.log(`# Faces is now ${Z.length}`),this.stickersperface=Z.length;const ot=[],X=bt(p);for(const c of this.rotations){const L=c.rotateface(p);X.dist(bt(L))<G&&ot.push(c)}const q=new Array(Z.length),K=[];for(let c=0;c<Z.length;c++){const L=Z[c].centermass();K.push([X.dist(L),L,c])}K.sort((c,L)=>c[0]-L[0]);for(let c=0;c<Z.length;c++){const L=K[c][2];if(!q[L]){q[L]=!0;for(const U of ot){const M=Z[L].rotate(U),O=M.centermass();for(let I=c+1;I<Z.length&&!(K[I][0]-K[c][0]>G);I++){const Q=K[I][2];if(!q[Q]&&O.dist(K[I][1])<G){q[Q]=!0,Z[Q]=M;break}}}}}this.shortedge=1e99;for(const c of Z)for(let L=0;L<c.length;L++){const U=(L+1)%c.length,M=c.get(L).dist(c.get(U));M<this.shortedge&&(this.shortedge=M)}this.options.verbosity>0&&console.log(`# Short edge is ${this.shortedge}`),e==="c"&&v&&!B&&!D&&(this.addNotationMapper="NxNxNCubeMapper",this.setReidOrder=!0),e==="c"&&D&&!v&&!B&&(this.addNotationMapper="SkewbMapper"),e==="t"&&(D||v)&&!B&&(this.addNotationMapper="PyraminxOrTetraminxMapper"),e==="o"&&v&&(this.notationMapper=new Rt(this.swizzler,new ft(["F","D","L","BL","R","U","BR","B"])),B||D||(this.addNotationMapper="FTOMapper")),e==="d"&&v&&(this.addNotationMapper="MegaminxMapper",this.notationMapper=new Rt(this.swizzler,new ft(["U","F","L","BL","BR","R","FR","FL","DL","B","DR","D"])))}keyface(t){return this.keyface2(t.centermass())}keyface2(t){let e="";const s=String.fromCharCode;for(const i of this.moveplanesets)if(i.length>0){const n=t.dot(i[0]);let o=0,r=1;for(;r*2<=i.length;)r*=2;for(;r>0;r>>=1)o+r<=i.length&&n>i[o+r-1].a&&(o+=r);if(o<47)e=e+s(33+o);else if(o<47+47*47)e=e+s(33+47+Math.floor(o/47)-1)+s(33+o%47);else if(o<47+47*47+47*47*47)e=e+s(33+47+Math.floor((o-47)/(47*47)-1))+s(33+47+Math.floor((o-47)/47)%47)+s(33+o%47);else throw Error("Too many slices for cubie encoding")}return e}keyface3(t){const e=t.centermass(),s=[];for(const i of this.moveplanesets)if(i.length>0){const n=e.dot(i[0]);let o=0,r=1;for(;r*2<=i.length;)r*=2;for(;r>0;r>>=1)o+r<=i.length&&n>i[o+r-1].a&&(o+=r);s.push(o)}return s}findface(t){const e=this.keyface2(t),s=this.facelisthash.get(e);if(s.length===1)return s[0];for(let i=0;i+1<s.length;i++){const n=this.facelisthash.get(e)[i];if(Math.abs(t.dist(this.facecentermass[n]))<G)return n}return s[s.length-1]}project2d(t,e,s){const i=this.facenames[t][0],n=(e+1)%i.length,o=this.baseplanes[t];let r=i[n].sub(i[e]);const m=r.len();r=r.normalize();const l=r.cross(o).normalize();let h=s[1].sub(s[0]);const b=h.len()/m;h=h.normalize();const d=h.b,g=h.c,f=r.smul(d).sub(l.smul(g)).smul(b),a=l.smul(d).sum(r.smul(g)).smul(b),p=new C(0,s[0].b-f.dot(i[e]),s[0].c-a.dot(i[e]),0);return[f,a,p]}allstickers(){this.faces=de(this.baseplanerot,this.faces),this.options.verbosity>0&&console.log(`# Total stickers is now ${this.faces.length}`),this.facecentermass=new Array(this.faces.length);for(let u=0;u<this.faces.length;u++)this.facecentermass[u]=this.faces[u].centermass();const t=[],e=[];for(const u of this.moveplanes){const x=u.makenormal();let E=!1;for(const z of e)x.sameplane(z.makenormal())&&(E=!0);E||(e.push(x),t.push([]))}for(const u of this.moveplanes2){const x=u.makenormal();for(let E=0;E<e.length;E++)if(x.sameplane(e[E])){t[E].push(u);break}}for(let u=0;u<t.length;u++){const x=t[u].map(z=>z.normalizeplane()),E=e[u];for(let z=0;z<x.length;z++)x[z].makenormal().dist(E)>G&&(x[z]=x[z].smul(-1));x.sort((z,F)=>z.a-F.a),t[u]=x}this.moveplanesets=t,this.moveplanenormals=e;const s=t.map(u=>u.length);this.options.verbosity>0&&console.log(`# Move plane sets: ${s}`);const i=[];for(let u=0;u<t.length;u++)i.push([]);for(const u of this.rotations){if(Math.abs(Math.abs(u.a)-1)<G)continue;const x=u.makenormal();for(let E=0;E<t.length;E++)if(x.sameplane(e[E])){i[E].push(u);break}}this.moverotations=i;for(let u=0;u<i.length;u++){const x=i[u],E=x[0].makenormal();for(let z=0;z<x.length;z++)E.dist(x[z].makenormal())>G&&(x[z]=x[z].smul(-1));x.sort((z,F)=>z.angle()-F.angle()),i[u][0].dot(e[u])<0&&x.reverse()}const n=i.map(u=>1+u.length);this.movesetorders=n;const o=[];let r="?";for(let u=0;u<t.length;u++){const x=e[u];let E=null,z=null;for(const F of this.geonormals){const R=x.dot(F[0]);Math.abs(R-1)<G?(z=[F[1],F[2]],r=F[2]):Math.abs(R+1)<G&&(E=[F[1],F[2]],r=F[2])}if(z===null||E===null)throw new Error("Saw positive or negative sides as null");o.push([z[0],z[1],E[0],E[1],1+t[u].length]),this.addNotationMapper==="NxNxNCubeMapper"&&r==="f"&&(this.notationMapper=new Ht(1+t[u].length),this.addNotationMapper=""),this.addNotationMapper==="SkewbMapper"&&t[0].length===1&&(this.notationMapper=new qt(this.swizzler),this.addNotationMapper=""),this.addNotationMapper==="PyraminxOrTetraminxMapper"&&(t[0].length===2&&t[0][0].a===.333333333333333&&t[0][1].a===1.66666666666667?(this.notationMapper=new St(this.swizzler),this.addNotationMapper=""):(this.notationMapper=new Jt(this.swizzler),this.addNotationMapper="")),this.addNotationMapper==="MegaminxMapper"&&r==="f"&&(1+t[u].length===3&&(this.notationMapper=new _t(this.notationMapper)),this.addNotationMapper=""),this.addNotationMapper==="FTOMapper"&&r==="f"&&(1+t[u].length===3&&(this.notationMapper=new Qt(this.notationMapper,this.swizzler)),this.addNotationMapper="")}this.movesetgeos=o;const m=new Map,l=this.faces;for(let u=0;u<l.length;u++){const x=l[u],E=this.keyface(x);if(!m.get(E))m.set(E,[u]);else{const z=m.get(E);if(z.push(u),z.length===this.baseFaceCount){this.options.verbosity>0&&console.log("# Splitting core.");for(let F=0;F<z.length;F++){const R=`${E} ${F}`;m.set(R,[z[F]])}}}}this.facelisthash=m,this.options.verbosity>0&&console.log(`# Cubies: ${m.size}`);const h=[],b=[],d=[];for(const u of m.values())if(u.length!==this.baseFaceCount){if(u.length>1){const x=u.map(k=>l[k].centermass()),E=bt(x);for(let k=0;u.length>2;k++){let N=!1;for(let P=0;P<u.length;P++){const A=(P+1)%u.length;if(E.dot(x[P].cross(x[A]))<0){const W=x[P];x[P]=x[A],x[A]=W;const H=u[P];u[P]=u[A],u[A]=H,N=!0}}if(!N)break;if(k>1e3)throw new Error("Bad epsilon math; too close to border")}let z=0;for(const k of u)z|=1<<Math.floor(k/this.stickersperface);const F=this.markedface[z];let R=-1;for(let k=0;k<u.length;k++)Math.floor(u[k]/this.stickersperface)===F&&(R=k);if(R<0)throw new Error("Could not find marked face in list");if(R!==0){const k=u.slice();for(let N=0;N<u.length;N++)u[N]=k[(R+N)%u.length]}}for(let x=0;x<u.length;x++){const E=u[x];b[E]=h.length,d[E]=x}h.push(u)}this.cubies=h,this.facetocubie=b,this.facetoord=d;const g=["?","CENTERS","EDGES","CORNERS","C4RNER","C5RNER"],f=[],a=[0,0,0,0,0,0],p=[],w=[];let y=0;const v=[],B=[],D=[],T=[],_=u=>h[u].map(x=>this.getfaceindex(x)).join(" "),S=[];for(let u=0;u<h.length;u++){const x=h[u];if(x.length===0||w[u])continue;const E={};let z=0;D.push(0),S.push([]);const F=x.length,R=a[F]++;let k=g[F];(k===void 0||F===this.baseFaceCount)&&(k="CORE"),k=k+(R===0?"":R+1),f[y]=k,p[y]=F;const N=[u];let P=0;for(w[u]=!0;P<N.length;){const A=N[P++],W=_(A);if((x.length>1||E[W]===void 0)&&(E[W]=z++),T[A]=E[W],v[A]=y,S[y].push(A),B[A]=D[y]++,N.length<this.rotations.length){const H=this.facecentermass[h[A][0]];for(const J of i){const V=this.facetocubie[this.findface(H.rotatepoint(J[0]))];w[V]||(N.push(V),w[V]=!0)}}}y++}if(this.setReidOrder&&4<=this.stickersperface&&this.stickersperface<=9){const u=[["UF","UR","UB","UL","DF","DR","DB","DL","FR","FL","BR","BL"],["UFR","URB","UBL","ULF","DRF","DFL","DLB","DBR"],["U","L","F","R","B","D"]],x={};for(const E of u)for(let z=0;z<E.length;z++){let F=0;for(let R=0;R<E[z].length;R++)F|=1<<E[z].charCodeAt(R)-65;x[F]=z}for(const E of S)for(const z of E){let F=0;for(const R of h[z])F|=1<<this.facenames[this.getfaceindex(R)][1].charCodeAt(0)-65;B[z]=x[F]}}if(this.cubiesetnums=v,this.cubieordnums=B,this.cubiesetnames=f,this.cubieords=D,this.orbitoris=p,this.cubievaluemap=T,this.cubiesetcubies=S,this.options.fixedPieceType!==null){for(let u=0;u<h.length;u++)if(this.options.fixedPieceType==="v"&&h[u].length>2||this.options.fixedPieceType==="e"&&h[u].length===2||this.options.fixedPieceType==="f"&&h[u].length===1){this.fixedCubie=u;break}if(this.fixedCubie<0)throw new Error(`Could not find a cubie of type ${this.options.fixedPieceType} to fix.`)}this.options.verbosity>0&&console.log(`# Cubie orbit sizes ${D}`)}unswizzle(t){const e=this.notationMapper.notationToInternal(t);return e===null?null:e.modified({family:this.swizzler.unswizzle(e.family)})}stringToBlockMove(t){const e=RegExp("^(([0-9]+)-)?([0-9]+)?([^0-9]+)([0-9]+'?)?$"),s=t.match(e);if(s===null)throw new Error(`Bad move passed ${t}`);const i=s[4];let n,o;if(s[2]!==void 0){if(s[3]===void 0)throw new Error("Missing second number in range");n=parseInt(s[2],10)}s[3]!==void 0&&(o=parseInt(s[3],10));let r="1",m=1;return s[5]!==void 0&&(r=s[5],r[0]==="'"&&(r=`-${r.substring(1)}`),m=parseInt(r,10)),new j(new $(i,o,n),m)}parseMove(t){const e=this.notationMapper.notationToInternal(t);if(e===null)throw new Error(`Bad move ${t.family}`);t=e;let s=t.family,i=!1;if(s.endsWith("v")&&s[0]<="Z"){if(t.innerLayer!==void 0||t.outerLayer!==void 0)throw new Error("Cannot use a prefix with full cube rotations");s=s.slice(0,-1),i=!0}s.endsWith("w")&&s[0]<="Z"&&(s=s.slice(0,-1).toLowerCase());let n,o=-1;const r=this.swizzler.unswizzle(s);let m=!1;for(let b=0;b<this.movesetgeos.length;b++){const d=this.movesetgeos[b];r===d[0]&&(m=!0,n=d,o=b),r===d[2]&&(m=!1,n=d,o=b)}let l=1,h=1;if(s.toUpperCase()!==s&&(h=2),n===void 0)throw new Error(`Bad grip in move ${t.family}`);if(t.outerLayer!==void 0&&(l=t.outerLayer),t.innerLayer!==void 0&&(t.outerLayer===void 0?(h=t.innerLayer,s<="Z"?l=h:l=1):h=t.innerLayer),l--,h--,i&&(l=0,h=this.moveplanesets[o].length),l<0||l>this.moveplanesets[o].length||h<0||h>this.moveplanesets[o].length)throw new Error(`Bad slice spec ${l} ${h} vs ${this.moveplanesets[o].length}`);if(l===0&&h===this.moveplanesets[o].length&&!i)throw new Error("! full puzzle rotations must be specified with v suffix.");return[void 0,o,l,h,m,t.amount]}parsemove(t){const e=this.parseMove(this.stringToBlockMove(t));return e[0]=t,e}genperms(){if(this.cmovesbyslice.length>0)return;const t=[];if(this.options.orientCenters){for(let e=0;e<this.cubies.length;e++)if(this.cubies[e].length===1){const s=this.cubies[e][0],i=this.getfaceindex(s),n=this.basefaces[i].centermass();if(n.dist(this.facecentermass[s])<G){const o=1<<i|1<<this.baseFaceCount,r=this.markedface[o],m=this.baseplanes[r].makenormal();let l=-1,h=-1;for(let g=0;g<this.faces[s].length;g++){const f=this.faces[s].get(g),a=m.dot(f.sub(n));a>l&&(l=a,h=g)}const b=(h+1)%this.faces[s].length;if(Math.abs(m.dot(this.faces[s].get(b).sub(n))-l)<G&&(h=b),h!==0){const g=[];for(let f=0;f<this.faces[s].length;f++)g.push(this.faces[s].get((f+h)%this.faces[s].length));this.faces[s]=new at(g)}const d=this.basefaces[i].length;for(let g=1;g<d;g++)this.cubies[e].push(this.cubies[e][g-1]);this.duplicatedFaces[s]=d,this.duplicatedCubies[e]=d,this.orbitoris[this.cubiesetnums[e]]=d}}}for(let e=0;e<this.moveplanesets.length;e++){const s=this.moveplanesets[e],i=[],n=[s.length+1,0];let o=1;for(;o*2<=s.length;)o*=2;for(let l=0;l<this.faces.length;l++){let h=0;if(s.length>0){const b=this.facecentermass[l].dot(s[0]);for(let d=o;d>0;d>>=1)h+d<=s.length&&b>s[h+d-1].a&&(h+=d);h=s.length-h}for(i.push(h);n.length<=h;)n.push(0);n[h]++}const r=new Array(n.length);for(let l=0;l<n.length;l++)r[l]=[];const m=[];for(let l=0;l<this.faces.length;l++){if(i[l]<0)continue;const h=[this.facetocubie[l],this.facetoord[l]];let b=this.facecentermass[l];const d=b;let g=l;const f=i[g];for(;;){i[g]=-1;const a=b.rotatepoint(this.moverotations[e][0]);if(a.dist(d)<G)break;g=this.findface(a),h.push(this.facetocubie[g],this.facetoord[g]),b=a}if(h.length>2&&this.options.orientCenters&&(this.cubies[h[0]].length===1||this.duplicatedCubies[h[0]]>1)&&this.facecentermass[l].dist(this.basefaces[this.getfaceindex(l)].centermass())<G){let a=this.faces[this.cubies[h[0]][0]];for(let p=0;p<h.length;p+=2){const w=this.faces[this.cubies[h[p]][0]];let y=-1;for(let v=0;v<a.length;v++)if(w.get(v).dist(a.get(0))<G){y=v;break}if(y<0)throw new Error("Couldn't find rotation of center faces; ignoring for now.");h[p+1]=y,a=a.rotate(this.moverotations[e][0])}}if(h.length===2&&this.options.orientCenters)for(let a=1;a<this.movesetorders[e];a++)f===0?h.push(h[0],a):h.push(h[0],(this.movesetorders[e]-a)%this.movesetorders[e]);if(h.length>2&&!m[h[0]]){if(h.length!==2*this.movesetorders[e])throw new Error("Bad length in perm gen");for(const a of h)r[f].push(a)}for(let a=0;a<h.length;a+=2)m[h[a]]=!0}for(let l=0;l<r.length;l++)r[l]=r[l].slice();t.push(r)}if(this.cmovesbyslice=t,this.options.moveList){const e=[];for(const s of this.options.moveList)e.push(this.parsemove(s));this.parsedmovelist=e}this.facelisthash.clear(),this.facecentermass=[]}getboundarygeometry(){return{baseplanes:this.baseplanes,facenames:this.facenames,faceplanes:this.faceplanes,vertexnames:this.vertexnames,edgenames:this.edgenames,geonormals:this.geonormals}}getmovesets(t){const e=this.moveplanesets[t].length;let s=[];if(this.parsedmovelist!==void 0)for(const i of this.parsedmovelist)i[1]===t&&(i[4]?s.push([i[2],i[3]]):s.push([e-i[3],e-i[2]]),s.push(i[5]));else if(this.options.vertexMoves&&!this.options.allMoves){const i=this.movesetgeos[t];if(i[1]!==i[3])for(let n=0;n<e;n++)i[1]!=="v"?(this.options.outerBlockMoves?s.push([n+1,e]):s.push([n+1]),s.push(1)):(this.options.outerBlockMoves?s.push([0,n]):s.push([n,n]),s.push(1))}else for(let i=0;i<=e;i++)!this.options.allMoves&&i+i===e||(this.options.outerBlockMoves?i+i>e?s.push([i,e]):s.push([0,i]):s.push([i,i]),s.push(1));if(this.fixedCubie>=0){const i=this.keyface3(this.faces[this.cubies[this.fixedCubie][0]])[t],n=[];for(let o=0;o<s.length;o+=2){let r=s[o];if(i>=r[0]&&i<=r[1])if(r[0]===0)r=[r[1]+1,e];else if(e===r[1])r=[0,r[0]-1];else throw Error("fixed cubie option would disconnect move");let m=!1;for(let l=0;l<n.length;l+=2)if(n[l][0]===r[0]&&n[l][1]===r[1]&&n[l+1]===s[o+1]){m=!0;break}m||(n.push(r),n.push(s[o+1]))}s=n}return s}graybyori(t){let e=this.cubies[t].length;return this.duplicatedCubies[t]&&(e=1),e===1&&(this.options.grayCenters||!this.options.includeCenterOrbits)||e===2&&(this.options.grayEdges||!this.options.includeEdgeOrbits)||e>2&&(this.options.grayCorners||!this.options.includeCornerOrbits)}skipbyori(t){let e=this.cubies[t].length;return this.duplicatedCubies[t]&&(e=1),e===1&&!this.options.includeCenterOrbits||e===2&&!this.options.includeEdgeOrbits||e>2&&!this.options.includeCornerOrbits}skipcubie(t){return this.skipbyori(t)}header(t){return t+ge+`
`+t+`
`}writegap(){const t=this.getOrbitsDef(!1),e=[],s=[];for(let n=0;n<t.moveops.length;n++){let o=`M_${yt(this.notationMapper,t.movenames[n])}`,r=!1;o[o.length-1]==="'"&&(o=o.substring(0,o.length-1),r=!0),s.push(o),r?e.push(`${o}:=${t.moveops[n].toPerm().inv().toGap()};`):e.push(`${o}:=${t.moveops[n].toPerm().toGap()};`)}e.push("Gen:=["),e.push(s.join(",")),e.push("];");const i=t.solved.identicalPieces();return e.push(`ip:=[${i.map(n=>`[${n.map(o=>o+1).join(",")}]`).join(",")}];`),e.push("# Size(Group(Gen));"),e.push("# Size(Stabilizer(Group(Gen), ip, OnTuplesSets));"),e.push(""),this.header("# ")+e.join(`
`)}writeksolve(t="PuzzleGeometryPuzzle"){const e=this.getOrbitsDef(!1);return this.header("# ")+e.toKsolve(t,this.notationMapper).join(`
`)}getKPuzzleDefinition(t=!0,e=!0){const i=this.getOrbitsDef(t,e).toKPuzzleDefinition(e);if(i.experimentalPuzzleDescription=this.puzzleDescription,!i)throw new Error("Missing definition!");return i}getMoveFromBits(t,e,s,i,n,o){const r=[],m=[],l=[];for(const d of this.cubieords)m.push(tt(d)),l.push(nt(d));for(let d=t[0];d<=t[1];d++){const g=i[d];for(let f=0;f<g.length;f+=2*o){const a=g.slice(f,f+2*o),p=this.cubiesetnums[a[0]];for(let v=0;v<a.length;v+=2)a[v]=this.cubieordnums[a[v]];let w=2,y=3;s&&(w=a.length-2,y=a.length-1),m[p]===tt(this.cubieords[p])&&(m[p]=m[p].slice(),this.orbitoris[p]>1&&!this.options.fixedOrientation&&(l[p]=l[p].slice()));for(let v=0;v<a.length;v+=2)m[p][a[(v+w)%a.length]]=a[v],this.orbitoris[p]>1&&!this.options.fixedOrientation&&(l[p][a[v]]=(a[(v+y)%a.length]-a[(v+1)%a.length]+2*this.orbitoris[p])%this.orbitoris[p])}}let h=new it(tt(24),nt(24),1);for(let d=0;d<this.cubiesetnames.length;d++)if(!(n&&!n[d]))if(this.orbitoris[d]===1||this.options.fixedOrientation)m[d]===tt(h.perm.length)?(m[d]!==h.perm&&(h=new it(m[d],l[d],1)),r.push(h)):r.push(new it(m[d],l[d],1));else{const g=new Array(l[d].length);for(let f=0;f<m[d].length;f++)g[f]=l[d][m[d][f]];r.push(new it(m[d],g,this.orbitoris[d]))}let b=new rt(r);return e!==1&&(b=b.mulScalar(e)),b}omitSet(t){for(const e of this.options.excludeOrbits)if(e===t)return!0;return!1}diffmvsets(t,e,s,i){for(let n=0;n<t.length;n+=2){let o=!1;for(let r=0;!o&&r<e.length;r+=2)i?t[n][0]+e[r][1]===s&&t[n][1]+e[r][0]===s&&t[n+1]===e[r+1]&&(o=!0):t[n][0]===e[r][0]&&t[n][1]===e[r][1]&&t[n+1]===e[r+1]&&(o=!0);if(!o)return!0}return!1}getOrbitsDef(t,e=!0){const s=[];if(t)for(let a=0;a<this.cubiesetnames.length;a++)s.push(1);const i=[],n=[],o=[],r=[];for(let a=0;a<this.moveplanesets.length;a++){const p=this.getmovesets(a);o.push(p),this.options.addRotations?r.push(1):r.push(0)}const m=[];for(let a=0;a<this.moveplanesets.length;a++){const p=this.moveplanesets[a].length;let w=!1;const y=o[a];for(let v=0;v<y.length;v+=2)y[v][0]===0&&y[v][1]===p&&(w=!0);m[a]=w}if(this.options.addRotations&&(this.options.moveList||this.options.fixedPieceType!==null)){for(let a=0;a<this.moverotations.length;a++)r[a]=0;for(let a=0;a<this.moveplanesets.length;a++){if(m[a]){r[a]=3;continue}for(let p=0;p<this.moverotations.length;p++){let w=this.moveplanenormals[a];for(let y=1;y*2<=this.movesetorders[p];y++){if(w=w.rotatepoint(this.moverotations[p][0]),r[p]&y)continue;let v=-1,B=!1;for(let T=0;T<this.moveplanenormals.length;T++)if(w.dist(this.moveplanenormals[T])<G){v=T;break}else if(w.dist(this.moveplanenormals[T].smul(-1))<G){v=T,B=!0;break}if(v<0)throw new Error("Could not find rotation");const D=o[v];(D.length!==o[a].length||this.moveplanesets[a].length!==this.moveplanesets[v].length||this.diffmvsets(D,o[a],this.moveplanesets[v].length,B))&&(r[p]|=y)}}}for(let a=0;a<this.moverotations.length;a++)if(r[a]===0)r[a]=1;else if(r[a]===1)this.movesetorders[a]>3?r[a]=2:r[a]=0;else if(r[a]===3)r[a]=0;else throw new Error("Impossible addrot val")}for(let a=0;a<this.moveplanesets.length;a++)r[a]!==0&&!m[a]&&(o[a].push([0,this.moveplanesets[a].length]),o[a].push(r[a]));for(let a=0;a<this.moveplanesets.length;a++){const p=o[a],w=this.movesetorders[a];for(let B=0;B<p.length;B+=2)for(let D=0;D<B;D+=2)if(p[B][0]===p[D][0]&&p[B][1]===p[D][1])throw new Error("Redundant moves in moveset.");const y=[];for(let B=0;B<p.length;B+=2)for(let D=p[B][0];D<=p[B][1];D++)y[D]=1;const v=this.cmovesbyslice[a];for(let B=0;B<v.length;B++){if(y[B]!==1)continue;const D=v[B];for(let T=0;T<D.length;T+=2*w){if(this.skipcubie(D[T]))continue;const _=this.cubiesetnums[D[T]];s[_]=1}}}for(let a=0;a<this.cubiesetnames.length;a++)if(!!s[a]){if(this.omitSet(this.cubiesetnames[a])){s[a]=0;continue}i.push(this.cubiesetnames[a]),n.push(new vt(this.cubieords[a],this.options.fixedOrientation?1:this.orbitoris[a]))}const l=[];for(let a=0;a<this.cubiesetnames.length;a++){if(!s[a]||this.omitSet(this.cubiesetnames[a]))continue;const p=[],w=[];for(let y=0;y<this.cubieords[a];y++){if(t)p.push(y);else{const v=this.cubiesetcubies[a][y];p.push(this.cubievaluemap[v])}w.push(0)}l.push(new it(p,w,this.options.fixedOrientation?1:this.orbitoris[a]))}const h=[],b=[],d=[],g=[];if(e)for(let a=0;a<this.moveplanesets.length;a++){const w=this.moveplanesets[a].length,y=o[a],v=this.movesetgeos[a];for(let B=0;B<y.length;B+=2){const D=y[B];let T,_=!1;if(this.parsedmovelist!==void 0)for(const u of this.parsedmovelist){if(u[1]!==a)continue;let x=[];u[4]?x=[u[2],u[3]]:x=[w-u[3],w-u[2]],x[0]===D[0]&&x[1]===D[1]&&(T=u[0],_=!u[4])}if(T)h.push(T),b.push(!0);else{const u=Fe(v,D,w);_=u[1];const x=u[0];y[B+1]===1?h.push(x):h.push(x+y[B+1]),b.push(!1)}g.push(D[0]===0&&D[1]===w);const S=this.getMoveFromBits(D,y[B+1],_,this.cmovesbyslice[a],s,this.movesetorders[a]);d.push(S)}}let f=new Ft(i,n,new xt(l),h,d,g,b);return this.options.optimizeOrbits&&(f=f.optimize()),this.options.scrambleAmount!==0&&f.scramble(this.options.scrambleAmount),f}getScramble(t=0){const e=this.getOrbitsDef(!1);return e.transformToKTransformationData(e.getScrambleTransformation(t))}getMovesAsPerms(){return this.getOrbitsDef(!1).moveops.map(t=>t.toPerm())}showcanon(t){oe(this.getOrbitsDef(!1),t)}getsolved(){const t=[];for(let e=0;e<this.baseFaceCount;e++)for(let s=0;s<this.stickersperface;s++)t.push(e);return new et(t)}getOrientationRotation(t){const[e,[s,i,n]]=t[0],o=new C(0,s,-i,n),[r,[m,l,h]]=t[1],b=new C(0,m,-l,h);let d=null,g=null;const f=this.swizzler.unswizzle(e),a=this.swizzler.unswizzle(r);for(const v of this.geonormals)f===v[1]&&(d=v[0]),a===v[1]&&(g=v[0]);if(!d)throw new Error(`Could not find feature ${e}`);if(!g)throw new Error(`Could not find feature ${r}`);const p=d.pointrotation(o);return g.rotatepoint(p).unproject(o).pointrotation(b.unproject(o)).mul(p)}getInitial3DRotation(){const t=this.baseFaceCount;let e=null;if(this.options.puzzleOrientation?e=this.options.puzzleOrientation:this.options.puzzleOrientations&&(e=this.options.puzzleOrientations[t]),e||(e=ye()[t]),!e)throw new Error("No default orientation?");return this.getOrientationRotation(e)}generate2dmapping(t=800,e=500,s=10,i=!1,n=.92){t-=2*s,e-=2*s;function o(F,R){let k=F[1][0]-F[0][0],N=F[1][1]-F[0][1];const P=2*Math.PI/R,A=Math.cos(P),W=Math.sin(P);for(let H=2;H<R;H++){const J=k*A+N*W;N=N*A-k*W,k=J,F.push([F[H-1][0]+k,F[H-1][1]+N])}}this.genperms();const l=this.getboundarygeometry().facenames[0][0].length,h=this.net;if(h===null)throw new Error("No net?");const b={};let d=0,g=0,f=1,a=0;b[h[0][0]]=[[1,0],[0,0]],o(b[h[0][0]],l);for(const F of h){const R=F[0];if(!b[R])throw new Error("Bad edge description; first edge not connected.");for(let k=1;k<F.length;k++){const N=F[k];N===""||b[N]||(b[N]=[b[R][k%l],b[R][(k+l-1)%l]],o(b[N],l))}}for(const F in b){const R=b[F];for(const k of R)d=Math.min(d,k[0]),f=Math.max(f,k[0]),g=Math.min(g,k[1]),a=Math.max(a,k[1])}const p=Math.min(t/(f-d),e/(a-g)),w=.5*(t-p*(f+d)),y=.5*(e-p*(a+g)),v={},B=this.getboundarygeometry(),D={},T=[[p+w,y],[w,y]];D[h[0][0]]=T,o(D[h[0][0]],l),v[this.facenames[0][1]]=this.project2d(0,0,[new C(0,T[0][0],T[0][1],0),new C(0,T[1][0],T[1][1],0)]);const _=[];_[0]=0;for(const F of h){const R=F[0];if(!D[R])throw new Error("Bad edge description; first edge not connected.");let k=-1;for(let P=0;P<B.facenames.length;P++)if(R===B.facenames[P][1]){k=P;break}if(k<0)throw new Error(`Could not find first face name ${R}`);const N=B.facenames[k][0];for(let P=1;P<F.length;P++){const A=F[P];if(A===""||D[A])continue;D[A]=[D[R][P%l],D[R][(P+l-1)%l]],o(D[A],l);const W=_[k],H=N[(W+P)%l].sum(N[(W+P+l-1)%l]).smul(.5),J=lt(B.edgenames,H),V=B.edgenames[J][1],Z=xe(V,this.facenames),ot=Z[R===Z[0]?1:0];let X=-1;for(let K=0;K<B.facenames.length;K++)if(ot===B.facenames[K][1]){X=K;break}if(X<0)throw new Error("Could not find second face name");const q=B.facenames[X][0];for(let K=0;K<q.length;K++)if(q[K].sum(q[(K+1)%l]).smul(.5).dist(H)<=G){const L=D[R][(P+l-1)%l],U=D[R][P%l];_[X]=K,v[ot]=this.project2d(X,K,[new C(0,U[0],U[1],0),new C(0,L[0],L[1],0)]);break}}}let S=0,u=0;const x=this.getInitial3DRotation();for(let F of this.faces){i&&(F=F.rotate(x));for(let R=0;R<F.length;R++)S=Math.max(S,Math.abs(F.get(R).b)),u=Math.max(u,Math.abs(F.get(R).c))}const E=Math.min(e/u/2,(t-s)/S/4);return(F,R)=>{if(i){R=R.rotatepoint(x);const k=.5*s+.25*t,N=this.baseplanes[F].rotateplane(x).d<0?1:-1;return[s+t*.5+N*(k-R.b*E),s+e*.5+R.c*E]}else{const k=v[this.facenames[F][1]];return[s+n*R.dot(k[0])+k[2].b,s+e-n*R.dot(k[1])-k[2].c]}}}generatesvg(t=800,e=500,s=10,i=!1){const n=this.generate2dmapping(t,e,s,i);function o(d,g,f){return`<polygon id="${d}" class="sticker" style="fill: ${f}" points="${g.map(a=>`${a[0]} ${a[1]}`).join(" ")}"/>
`}const r=this.getsolved(),m=[],l=[];for(let d=0;d<this.baseFaceCount;d++)m[d]=this.colors[this.facenames[d][1]];for(let d=0;d<this.faces.length;d++){const g=this.faces[d],f=Math.floor(d/this.stickersperface),a=[];for(let p=0;p<g.length;p++)a.push(n(f,g.get(p)));l.push(a)}const h=[];for(let d=0;d<this.baseFaceCount;d++){h.push("<g>"),h.push(`<title>${this.facenames[d][1]}</title>
`);for(let g=0;g<this.stickersperface;g++){const f=d*this.stickersperface+g,a=this.facetocubie[f],p=this.facetoord[f],w=this.cubiesetnums[a],y=this.cubieordnums[a],v=this.graybyori(a)?"#808080":m[r.p[f]];let B=`${this.cubiesetnames[w]}-l${y}-o${p}`;if(h.push(o(B,l[f],v)),this.duplicatedFaces[f])for(let D=1;D<this.duplicatedFaces[f];D++)B=`${this.cubiesetnames[w]}-l${y}-o${D}`,h.push(o(B,l[f],v))}h.push("</g>")}return`<svg id="svg" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 800 500">
<style type="text/css"><![CDATA[.sticker { stroke: #000000; stroke-width: 1px; }]]></style>
${h.join("")}</svg>`}get3d(t){const e=[],s=this.getInitial3DRotation(),i=[],n=.52*this.basefaces[0].get(0).len();for(let l=0;l<this.basefaces.length;l++){const h=this.basefaces[l].rotate(s),b=this.facenames[l][1];i.push({coords:wt(h,n),name:b})}for(let l=0;l<this.faces.length;l++){const h=Math.floor(l/this.stickersperface),b=this.facetocubie[l],d=this.facetoord[l],g=this.cubiesetnums[b],f=this.cubieordnums[b];let a=this.graybyori(b)?t?.darkIgnoredOrbits?"#222222":"#808080":this.colors[this.facenames[h][1]];t?.stickerColors&&(a=t.stickerColors[l]);const p=this.faces[l].rotate(s);e.push({coords:wt(p,n),color:a,orbit:this.cubiesetnames[g],ord:f,ori:d,face:h});let w=p;if(this.duplicatedFaces[l]){const y=w.length/this.duplicatedFaces[l];for(let v=1;v<this.duplicatedFaces[l];v++){for(let B=0;B<y;B++)w=w.rotateforward();e.push({coords:wt(w,n),color:a,orbit:this.cubiesetnames[g],ord:f,ori:v,face:h,isDup:!0})}}}const o=[];for(let l=0;l<this.movesetgeos.length;l++){const h=this.movesetgeos[l],b=this.movesetorders[l];for(const d of this.geonormals)h[0]===d[1]&&h[1]===d[2]&&(o.push({coordinates:ht(d[0].rotatepoint(s),1),quantumMove:new j(h[0]),order:b}),o.push({coordinates:ht(d[0].rotatepoint(s).smul(-1),1),quantumMove:new j(h[2]),order:b}))}const r=this.generate2dmapping(2880,2160,0,!1,1),m=function(){const l=s.invrot();return function(h,b){let d=new C(0,b[0]*n,-b[1]*n,b[2]*n);d=d.rotatepoint(l);const g=r(h,d);return g[0]/=2880,g[1]=1-g[1]/2160,g}}().bind(this);return{stickers:e,faces:i,axis:o,unswizzle:this.unswizzle.bind(this),notationMapper:this.notationMapper,textureMapper:{getuv:m}}}getGeoNormal(t){const e=this.getInitial3DRotation(),s=this.swizzler.unswizzle(t);for(const i of this.geonormals)if(s===i[1]){const n=ht(i[0].rotatepoint(e),1);return Math.abs(n[0])<G&&Math.abs(n[2])<G&&(n[0]=0,n[2]=1e-6),n}}getfaceindex(t){const e=this.stickersperface;return Math.floor(t/e)}textForTwizzleExplorer(){return`Faces ${this.baseplanerot.length}
Stickers per face ${this.stickersperface}
Short edge ${this.shortedge}
Cubies ${this.cubies.length}
Edge distance ${this.edgedistance}
Vertex distance ${this.vertexdistance}`}writeSchreierSims(t){const s=this.getOrbitsDef(!1).reassemblySize();t(`Reassembly size is ${s}`);const i=me(this.getMovesAsPerms(),t),n=s/i;t(`Ratio is ${n}`)}},Ee=class{constructor(t,e){this.pg=t,this.orbitNames=e.orbitnames}lookupMove(t){const e=this.pg.parseMove(t);if(this.pg.parsedmovelist){let o=!1;for(const r of this.pg.parsedmovelist)r[1]===e[1]&&r[2]===e[2]&&r[3]===e[3]&&r[4]===e[4]&&(o=!0);if(!o)return null}let s=[e[2],e[3]];if(!e[4]){const o=this.pg.moveplanesets[e[1]].length;s=[o-e[3],o-e[2]]}const i=this.pg.getMoveFromBits(s,e[5],!e[4],this.pg.cmovesbyslice[e[1]],void 0,this.pg.movesetorders[e[1]]);return Ft.transformToKTransformationData(this.orbitNames,i)}};export{ke as EXPERIMENTAL_PUZZLE_BASE_SHAPES,je as EXPERIMENTAL_PUZZLE_CUT_TYPES,Ee as ExperimentalPGNotation,Be as PuzzleGeometry,C as Quat,Me as getPG3DNamedPuzzles,ze as getPuzzleDescriptionString,Le as getPuzzleGeometryByDesc,Ue as getPuzzleGeometryByName,De as parseOptions,It as parsePuzzleDescription,me as schreierSims};
